services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${HOST_PORT:-8000}:8000"
    depends_on:
      - db
      - redis
    volumes:
      - static_volume:/app/static
      - staticfile_volume:/app/staticfiles
      - media_volume:/app/media
      - ./:/app:delegated
    restart: unless-stopped
    networks:
      - app_network

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT_HOST:-5432}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "60", "1"]
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: ["celery", "-A", "${PROJECTNAME}", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - db
    volumes:
      - ./:/app:delegated
    restart: unless-stopped
    networks:
      - app_network

volumes:
  postgres_data:
  redis_data:
  static_volume:
  staticfile_volume:
  media_volume:

networks:
  app_network:
    driver: bridge
